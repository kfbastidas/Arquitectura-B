DROP TABLE MONEDA CASCADE CONSTRAINT;
DROP TABLE ALCANCIA CASCADE CONSTRAINT;
DROP TABLE AHORRA CASCADE CONSTRAINT;
DROP TABLE CONTIENE CASCADE CONSTRAINT;
DROP TABLE CLIENTE CASCADE CONSTRAINT;
DROP TABLE ACCESO CASCADE CONSTRAINT;

CREATE TABLE CLIENTE(
  USUARIO VARCHAR2(50),
  NOMBRE VARCHAR2(50) NOT NULL,
  APELLIDO VARCHAR2(50) NOT NULL,
  CONTRASEÑA VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_CLIENTE PRIMARY KEY(USUARIO)
);  

CREATE TABLE ACCESO(
  FECHAINGRESO DATE,
  USUARIO VARCHAR2(50),
  ESTADO CHAR(1),
  CONSTRAINT PK_ACCESO PRIMARY KEY(FECHAINGRESO),
  CONSTRAINT FK_ACC_CLI FOREIGN KEY(USUARIO) REFERENCES CLIENTE(USUARIO),
  CONSTRAINT CKC_ESTADO CHECK(ESTADO IN('0','1'))
);

CREATE TABLE MONEDA(
  DENOMINACION NUMBER(10),
  PAIS VARCHAR2(50),
  UNIDADMONETARIA VARCHAR2(50),
  CONSTRAINT PK_MONEDA PRIMARY KEY(DENOMINACION,PAIS)
);

CREATE TABLE ALCANCIA(
  ID NUMBER(10),
  AHORROTOTAL NUMBER(10),
  USUARIO VARCHAR2(50),
  CONSTRAINT PK_ALCANCIA PRIMARY KEY(ID),
  CONSTRAINT FK_ALC_USU FOREIGN KEY(USUARIO) REFERENCES CLIENTE(USUARIO)
);

CREATE TABLE AHORRA(
  FECHA DATE,
  ID NUMBER(10),
  DENOMINACION NUMBER(10),
  PAIS VARCHAR2(50),
  CANTIDAD NUMBER(10),
  CONSTRAINT PK_AHORRA PRIMARY KEY(FECHA,ID,DENOMINACION,PAIS),
  CONSTRAINT FK_AHO_ALC FOREIGN KEY(ID) REFERENCES ALCANCIA(ID),
  CONSTRAINT FK_AHO_MOD FOREIGN KEY(DENOMINACION,PAIS) REFERENCES MONEDA(DENOMINACION,PAIS)
);

CREATE TABLE CONTIENE(
  ID NUMBER(10),
  DENOMINACION NUMBER(10),
  PAIS VARCHAR2(50),
  CANTIDAD NUMBER(10),
  CONSTRAINT PK_CONTIENE PRIMARY KEY(ID,DENOMINACION,PAIS),
  CONSTRAINT FK_CON_ALC FOREIGN KEY(ID) REFERENCES ALCANCIA(ID),
  CONSTRAINT FK_CON_MOD FOREIGN KEY(DENOMINACION,PAIS) REFERENCES MONEDA(DENOMINACION,PAIS)
);

CREATE OR REPLACE TRIGGER UPDATE_MONEDA
AFTER UPDATE ON MONEDA
FOR EACH ROW
DECLARE
  N NUMBER;
BEGIN
  SELECT COUNT(*) INTO N
  FROM CONTIENE
  WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
  IF N>0 THEN
    UPDATE CONTIENE SET DENOMINACION=:NEW.DENOMINACION,PAIS=:NEW.PAIS 
    WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
  END IF ;
  SELECT COUNT(*) INTO N
  FROM AHORRA
  WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
  IF N>0 THEN
    UPDATE AHORRA SET DENOMINACION=:NEW.DENOMINACION,PAIS=:NEW.PAIS 
    WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
  END IF ;
END;

CREATE OR REPLACE TRIGGER DELETE_MONEDA
AFTER DELETE ON MONEDA
FOR EACH ROW
BEGIN
  DELETE FROM CONTIENE WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
  DELETE FROM AHORRA WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
END;

/***************************TRIGER MONEDA***************************************/
CREATE OR REPLACE TRIGGER TG_MONEDA
AFTER UPDATE OR DELETE ON MONEDA
FOR EACH ROW
DECLARE
  N NUMBER;
BEGIN
  IF DELETING THEN
    DELETE FROM CONTIENE WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
    DELETE FROM AHORRA WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
  ELSE
    SELECT COUNT(*) INTO N
    FROM CONTIENE
    WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
    IF N>0 THEN
      UPDATE CONTIENE SET DENOMINACION=:NEW.DENOMINACION,PAIS=:NEW.PAIS 
      WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
    END IF ;
    SELECT COUNT(*) INTO N
    FROM AHORRA
    WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
    IF N>0 THEN
      UPDATE AHORRA SET DENOMINACION=:NEW.DENOMINACION,PAIS=:NEW.PAIS 
      WHERE DENOMINACION=:OLD.DENOMINACION AND PAIS=:OLD.PAIS;
    END IF ;
  END IF;
END;


/************************************TRIGER AHORRA*************************************/
CREATE OR REPLACE TRIGGER TG_INSERTAR_AHO_COMPUESTO
FOR INSERT ON AHORRA
COMPOUND TRIGGER
  V_ID AHORRA.ID%TYPE;
  V_DENOMINACION AHORRA.DENOMINACION%TYPE;
  V_PAIS AHORRA.PAIS%TYPE;
  V_CANTIDAD AHORRA.CANTIDAD%TYPE;
  AFTER EACH ROW 
  IS
    
  BEGIN
    V_ID := :NEW.ID;
    V_DENOMINACION := :NEW.DENOMINACION;
    V_PAIS := :NEW.PAIS;
    V_CANTIDAD := :NEW.CANTIDAD;
  END AFTER EACH ROW;
  
  AFTER STATEMENT 
  IS
    TOTAL NUMBER;
  BEGIN
    CASE
      WHEN V_DENOMINACION = 50 THEN
        UPDATE CONTIENE SET CANTIDAD=CANTIDAD+V_CANTIDAD 
        WHERE DENOMINACION=V_DENOMINACION AND PAIS=V_PAIS AND ID=V_ID;
      
        SELECT SUM(DENOMINACION*CANTIDAD) INTO TOTAL
        FROM ALCANCIA NATURAL JOIN CONTIENE
        WHERE ID=V_ID;
      
        UPDATE ALCANCIA SET AHORROTOTAL=TOTAL 
        WHERE ID=V_ID;
      WHEN V_DENOMINACION = 100 THEN
        UPDATE CONTIENE SET CANTIDAD=CANTIDAD+V_CANTIDAD 
        WHERE DENOMINACION=V_DENOMINACION AND PAIS=V_PAIS AND ID=V_ID;
      
        SELECT SUM(DENOMINACION*CANTIDAD) INTO TOTAL
        FROM ALCANCIA NATURAL JOIN CONTIENE
        WHERE ID=V_ID;
      
        UPDATE ALCANCIA SET AHORROTOTAL=TOTAL 
        WHERE ID=V_ID;
      WHEN V_DENOMINACION = 200 THEN  
        UPDATE CONTIENE SET CANTIDAD=CANTIDAD+V_CANTIDAD 
        WHERE DENOMINACION=V_DENOMINACION AND PAIS=V_PAIS AND ID=V_ID;
      
        SELECT SUM(DENOMINACION*CANTIDAD) INTO TOTAL
        FROM ALCANCIA NATURAL JOIN CONTIENE
        WHERE ID=V_ID;
      
        UPDATE ALCANCIA SET AHORROTOTAL=TOTAL 
        WHERE ID=V_ID;
      WHEN V_DENOMINACION = 500 THEN
        UPDATE CONTIENE SET CANTIDAD=CANTIDAD+V_CANTIDAD 
        WHERE DENOMINACION=V_DENOMINACION AND PAIS=V_PAIS AND ID=V_ID;
      
        SELECT SUM(DENOMINACION*CANTIDAD) INTO TOTAL
        FROM ALCANCIA NATURAL JOIN CONTIENE
        WHERE ID=V_ID;
      
        UPDATE ALCANCIA SET AHORROTOTAL=TOTAL 
        WHERE ID=V_ID;
      WHEN V_DENOMINACION = 1000 THEN
        UPDATE CONTIENE SET CANTIDAD=CANTIDAD+V_CANTIDAD 
        WHERE DENOMINACION=V_DENOMINACION AND PAIS=V_PAIS AND ID=V_ID;
      
        SELECT SUM(DENOMINACION*CANTIDAD) INTO TOTAL
        FROM ALCANCIA NATURAL JOIN CONTIENE
        WHERE ID=V_ID;
      
        UPDATE ALCANCIA SET AHORROTOTAL=TOTAL 
        WHERE ID=V_ID;
    END CASE;
    DBMS_OUTPUT.PUT_LINE('');
  END AFTER STATEMENT;
END;


CREATE OR REPLACE TRIGGER UPDATE_ALCANCIA
AFTER UPDATE ON ALCANCIA
FOR EACH ROW
DECLARE
  N NUMBER;
BEGIN
  SELECT COUNT(*) INTO N
  FROM CONTIENE
  WHERE ID=:OLD.ID;
  IF N>0 THEN
    UPDATE CONTIENE SET ID=:NEW.ID 
    WHERE ID=:OLD.ID;
  END IF ;
  
  SELECT COUNT(*) INTO N
  FROM AHORRA
  WHERE ID=:OLD.ID;
  IF N>0 THEN
    UPDATE AHORRA SET ID=:NEW.ID 
    WHERE ID=:OLD.ID;
  END IF ;
END;

CREATE OR REPLACE TRIGGER DELETE_ALCANCIA
AFTER DELETE ON ALCANCIA
FOR EACH ROW
BEGIN
  DELETE FROM CONTIENE WHERE ID=:OLD.ID;
  DELETE FROM AHORRA WHERE ID=:OLD.ID;
END;

CREATE OR REPLACE TRIGGER INSERT_ALCANCIA
AFTER INSERT ON ALCANCIA
FOR EACH ROW
DECLARE
  CURSOR C_MONEDA IS SELECT * FROM MONEDA;
  V_ID NUMBER;
BEGIN
  V_ID := :NEW.ID;
  FOR X IN C_MONEDA LOOP
    INSERT INTO CONTIENE VALUES(V_ID,X.DENOMINACION,X.PAIS,0);
  END LOOP ;
END;

/****************************TRIGER ALCANCIA***************************/

CREATE OR REPLACE TRIGGER TG_ALCANCIA
AFTER INSERT OR DELETE OR UPDATE ON ALCANCIA
FOR EACH ROW
DECLARE
  CURSOR C_MONEDA IS SELECT * FROM MONEDA;
  V_ID NUMBER;
  N NUMBER;
BEGIN
  IF INSERTING THEN
    V_ID := :NEW.ID;
    FOR X IN C_MONEDA LOOP
      INSERT INTO CONTIENE VALUES(V_ID,X.DENOMINACION,X.PAIS,0);
    END LOOP ;
  ELSIF DELETING THEN
    DELETE FROM CONTIENE WHERE ID=:OLD.ID;
    DELETE FROM AHORRA WHERE ID=:OLD.ID;
  ELSE
    SELECT COUNT(*) INTO N
    FROM CONTIENE
    WHERE ID=:OLD.ID;
    IF N>0 THEN
      UPDATE CONTIENE SET ID=:NEW.ID 
      WHERE ID=:OLD.ID;
    END IF ;
  
    SELECT COUNT(*) INTO N
    FROM AHORRA
    WHERE ID=:OLD.ID;
    IF N>0 THEN
      UPDATE AHORRA SET ID=:NEW.ID 
      WHERE ID=:OLD.ID;
    END IF ;
  END IF;
END;

/**************************************TRIGER CLIENTE************************************/
CREATE OR REPLACE TRIGGER TG_CLIENTE
AFTER INSERT ON CLIENTE
FOR EACH ROW
BEGIN
  INSERT INTO ALCANCIA VALUES(nvl((SELECT MAX(ID) FROM ALCANCIA),-1)+1,0,:NEW.USUARIO);
  UPDATE ACCESO SET ESTADO='0' WHERE FECHAINGRESO =(SELECT MAX(FECHAINGRESO) FROM ACCESO);
END;

/*************************************TRIGER ACCESO**************************************/
CREATE OR REPLACE TRIGGER TG_ACESSO
FOR INSERT ON ACCESO
COMPOUND TRIGGER
  V_USUARIO ACCESO.USUARIO%TYPE;
  AFTER EACH ROW 
  IS    
  BEGIN
    V_USUARIO := :NEW.USUARIO;
  END AFTER EACH ROW;
  
  AFTER STATEMENT 
  IS
    V_CONT NUMBER := 0;
  BEGIN
    SELECT COUNT(*) INTO V_CONT FROM ACCESO WHERE USUARIO=V_USUARIO;
    IF V_CONT > 2 THEN
      DELETE FROM ACCESO WHERE FECHAINGRESO = (SELECT MIN(FECHAINGRESO) FROM ACCESO);
    END IF ;   
  END AFTER STATEMENT;
END;  

INSERT INTO MONEDA VALUES(50,'COLOMBIA','PESOS');
INSERT INTO MONEDA VALUES(100,'COLOMBIA','PESOS');
INSERT INTO MONEDA VALUES(200,'COLOMBIA','PESOS');
INSERT INTO MONEDA VALUES(500,'COLOMBIA','PESOS');
INSERT INTO MONEDA VALUES(1000,'COLOMBIA','PESOS');

INSERT INTO CLIENTE VALUES('kevith15','kevith','Bastidas','123456');

INSERT INTO ALCANCIA VALUES(1,0,'kevith15');
INSERT INTO ALCANCIA VALUES(2,0,'kevith15');

INSERT INTO CONTIENE VALUES(1,50,'COLOMBIA',0);
INSERT INTO CONTIENE VALUES(2,200,'COLOMBIA',0);

INSERT INTO AHORRA VALUES(SYSDATE,1,50,'COLOMBIA',3);

INSERT INTO ACCESO VALUES(SYSDATE,'kevith15',0);
INSERT INTO ACCESO VALUES(SYSDATE,'kevith14',1);

DESC CONTIENE;

SELECT *
FROM ALCANCIA NATURAL JOIN MONEDA
ORDER BY ID;

SELECT *
FROM AHORRA;

SELECT *
FROM MONEDA;

SELECT *
FROM ALCANCIA A INNER JOIN CONTIENE C 
ON A.ID=C.ID
RIGHT JOIN MONEDA M 
ON C.DENOMINACION=M.DENOMINACION 
WHERE C.DENOMINACION IS NULL
ORDER BY M.DENOMINACION;

SELECT DENOMINACION
FROM MONEDA
MINUS
SELECT DENOMINACION
FROM CONTIENE NATURAL JOIN ALCANCIA
WHERE ID=2;

commit;

SELECT M.DENOMINACION,M.PAIS,M.UNIDADMONETARIA
FROM MONEDA M INNER JOIN (SELECT DENOMINACION,PAIS 
                          FROM MONEDA 
                          MINUS 
                          SELECT DENOMINACION,PAIS 
                          FROM CONTIENE NATURAL JOIN ALCANCIA 
                          WHERE ID=2) T 
ON M.DENOMINACION=T.DENOMINACION AND M.PAIS=T.PAIS;